"use strict";function _createForOfIteratorHelper(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(!c){if(Array.isArray(a)||(c=_unsupportedIterableToArray(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0,e=function(){};return{s:e,n:function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}},e:function(a){throw a},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,g=!0,h=!1;return{s:function(){c=c.call(a)},n:function(){var a=c.next();return g=a.done,a},e:function(a){h=!0,f=a},f:function(){try{g||null==c["return"]||c["return"]()}finally{if(h)throw f}}}}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var scope=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw new Error("unable to locate global object")}(),checkRules=function(a){return a.forEach(function(a){if("function"!=typeof a)throw new Error("Expected [rule] to be typeof [function], got [".concat("undefined"==typeof value?"undefined":_typeof(value),"]"))}),!0},isSet=function(a){return"[object Set]"===Object.prototype.toString.call(a)},checkSet=function(a){if(!a||!a.constructor||!isSet(a)||!(a instanceof scope.Set))throw new Error("Expected [set] to be instanceof [".concat(scope.Set.name,"], got [").concat(a&&a.constructor,"]"));return!0},checkSets=function(a){return a.every(function(a){return checkSet(a)})},checkArgsLength=function(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:1;if(!a||a.length!==b)throw new Error("The function must be given exactly ".concat(b," argument."));return!0},arbitraryToBinary=function(a){return function(){for(var b=arguments.length,c=Array(b),d=0;d<b;d++)c[d]=arguments[d];checkArgsLength(c,1);var e=c[0];return a(this,e)}},originals={constructor:scope.Set,add:scope.Set.prototype.add,has:scope.Set.prototype.has};scope.Set.prototype.add=function(a){if(this.rulesFct&&!this.rulesFct.call(null,a))throw new Error("Value [".concat(a,"] does not match ruleset."));return isSet(a)&&this.has(a)?this:originals.add.call(this,a)};function resolve(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new originals.constructor([a]);if("undefined"==typeof a||"string"==typeof a||"number"==typeof a||"boolean"==typeof a||null===a)return a;if(isSet(a)&&(a=Array.from(a)),"function"==typeof a){var c={fctStr:(a+"").replace(/\s+/g,"")};return c.refs=Object.getOwnPropertyNames(a).map(function(c){return originals.has.call(b,a[c])?"circular":resolve(a[c],b)}),c}var d=Array.isArray(a);if("object"!==_typeof(a)&&!d)return a;if(b.add(a),d)return a.map(function(a){return originals.has.call(b,a)?"circular":resolve(a,b)});var e={};return Object.getOwnPropertyNames(a).sort(function(c,a){return c.localeCompare(a)}).forEach(function(c){e[c]=originals.has.call(b,a[c])?"circular":resolve(a[c],b)}),e}scope.Set.prototype.has=function(a){var b=_typeof(a);if("string"===b||"number"===b||"boolean"===b)return originals.has.call(this,a);for(var c,d=this.values();(c=d.next().value)!==void 0;){var e=_typeof(c);if(e!==b)return!1;var f=isSet(c)&&isSet(a);if(c===a)return!0;if(f&&c.equal(a))return!0;if("function"===e&&"function"===b||!f&&"object"===e&&"object"===b||Array.isArray(c)&&Array.isArray(a)){var g=resolve(c),h=resolve(a);if(JSON.stringify(g)===JSON.stringify(h))return!0}}return!1},scope.Set.prototype.rules=function(a){return a&&(checkRules([a]),this.rulesFct=a),this.rulesFct},scope.Set.prototype.toArray=function(){var a=this,b=[];b.length=a.size;var c=0;return a.forEach(function(a){b[c++]=a}),b},scope.Set.prototype.any=function(){var a=this,b=a.values();return b.next().value},scope.Set.prototype.randomElement=function(){var a=this.toArray(),b=Math.floor(Math.random()*a.length);return a[b]},scope.Set.prototype.isSupersetOf=function(a){for(var b,c=a.values();(b=c.next().value)!==void 0;)if(!this.has(b))return!1;return!0},scope.Set.prototype.isSubsetOf=function(a){return a.isSupersetOf(this)},scope.Set.prototype.properSupersetOf=function(a){return this.size!==a.size&&this.isSupersetOf(a)},scope.Set.prototype.properSubsetOf=function(a){return this.size!==a.size&&this.isSubsetOf(a)},scope.Set.prototype.equal=function(a){return checkSet(a),this.size===a.size&&this.isSubsetOf(a)},scope.Set.prototype.isEmpty=function(){return 0===this.size},scope.Set=function(a,b){var c=new originals.constructor;return b&&c.rules(b),a&&a.forEach(function(a){return c.add(a)}),c},scope.Set.prototype=originals.constructor.prototype,scope.Set.from=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return new Set([].concat(b))},scope.Set.toSet=function(a){return a instanceof Set?a:Set.from(a)},scope.Set.copy=function(a){checkSet(a);var b=new Set;return a.forEach(function(a){return b.add(a)}),b},scope.Set.union=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];checkSets(b);var d=new Set;return b.forEach(function(a){return a.forEach(function(a){return d.add(a)})}),d},scope.Set.prototype.union=arbitraryToBinary(scope.Set.union),scope.Set.intersection=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];if(checkSets(b),!b||0===b.length)throw new Error("The intersection operator currently does not support 0 arguments.");var d,e=new Set,f=b.reduce(function(a,b){return a.size<b.size?a:b},b[0]),g=_createForOfIteratorHelper(f);try{var h=function(){var a=d.value;b.every(function(b){return b.has(a)})&&e.add(a)};for(g.s();!(d=g.n()).done;)h()}catch(a){g.e(a)}finally{g.f()}return e},scope.Set.prototype.intersect=arbitraryToBinary(scope.Set.intersection),scope.Set.difference=function(a,b){checkSet(a),checkSet(b);var c=new Set([]);return a.forEach(function(a){b.has(a)||c.add(a)}),c},scope.Set.complement=function(a,b){if(checkSet(a),checkSet(b),!a.isSupersetOf(b))throw new Error("[set2] has an element which is not in the universe [set1].");return Set.difference(a,b)};function symDiff(a,b){function addToSet(a,b,c){a.forEach(function(a){b.has(a)||c.add(a)})}var c=new Set;return addToSet(a,b,c),addToSet(b,a,c),c}scope.Set.symDiff=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];if(b.forEach(function(a){return checkSet(a)}),2===b.length)return symDiff.apply(void 0,b);for(var d=symDiff(b.shift(),b.shift());0<b.length;)d=symDiff(d,b.shift());return d},scope.Set.cartesian=function(a,b){checkSet(a),checkSet(b);var c=new Set;return a.forEach(function(a){return b.forEach(function(b){return c.add([a,b])})}),c};function subsets(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new Set;if(checkSet(a),0===a.size)return Set.from(a);for(var c=a.values(),d=c.next();!d.done;){var f=d.value,e=Set.from(f),g=Set.difference(a,e);b.add(g);var h=subsets(g);h.forEach(function(a){return b.add(a)}),d=c.next()}return b}scope.Set.power=function(a){checkSet(a);var b=subsets(a);return b.add(new Set),b.add(a),a.forEach(function(a){return b.add(Set.from(a))}),b};var mergeRulesAny=function(a,b){var c=a?b.every:b.some;return function(a){var d=c.call(b,function(b){return b.call(a)});if(!d)throw new Error("Value [".concat(a,"] does not match any rule of the ruleset."));return!0}};scope.Set.mergeRules=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return checkRules(b),mergeRulesAny(!1,b)},scope.Set.mergeRulesStrict=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return checkRules(b),mergeRulesAny(!0,b)},scope.Set.__isExtended__=!0;